#!/usr/bin/env php
<?php

declare(strict_types=1);

use Stasis\EventDispatcher\EventDispatcher;
use Stasis\Kernel;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Filesystem\Path;
use Stasis\Config\ConfigLoader;
use Stasis\Console\ApplicationFactory;

if (isset($GLOBALS['_composer_autoload_path'])) {
    $autoloadPath = $GLOBALS['_composer_autoload_path'];
} else {
    $files = [__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php'];
    foreach ($files as $file) {
        if (file_exists($file)) {
            $autoloadPath = $file;
            break;
        }
    }
}
require_once $autoloadPath;

$autoloadPath = Path::canonicalize($autoloadPath);
$projectRoot = dirname($autoloadPath, 2);

$input = new ArgvInput();
$configPath = $input->getParameterOption(ApplicationFactory::CONFIG_OPTION, null);
$kernel = new Kernel(new ConfigLoader($projectRoot, $configPath), new EventDispatcher());

$application = ApplicationFactory::create($kernel);
$application->run();
